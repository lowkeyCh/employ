{"ast":null,"code":"export default {\n  mounted() {\n    /**\r\n     * 从数据库中读取所有用户\r\n     */\n    this.$axios.get('http://localhost:8081/user/query_all').then(res => {\n      for (let i = 0; i < res.data.length; i++) {\n        this.userList[i] = {\n          userId: res.data[i].userId,\n          userName: res.data[i].userName,\n          userPassword: res.data[i].userPassword,\n          userIdentity: res.data[i].userIdentity\n        };\n        this.tableDataList[i] = {\n          userId: res.data[i].userId,\n          userName: res.data[i].userName,\n          userPassword: res.data[i].userPassword,\n          userIdentity: res.data[i].userIdentity\n        };\n      }\n\n      /**\r\n       * 重新渲染el-upload\r\n       */\n      // 移除组件\n      this.tableDataListShow = false;\n      // 在组件移除后，重新渲染组件\n      // this.$nextTick可实现在DOM 状态更新后，执行传入的方法。\n      this.$nextTick(() => {\n        this.tableDataListShow = true;\n      });\n    });\n  },\n  data() {\n    return {\n      /**\r\n       * 用户数据列表\r\n       */\n      userList: [{\n        userId: 0,\n        userName: '',\n        userPassword: '',\n        userIdentity: ''\n      }],\n      /**\r\n       * 展示数据集合\r\n       */\n      tableDataList: [{\n        userId: 0,\n        userName: '',\n        userPassword: '',\n        userIdentity: ''\n      }],\n      /**\r\n       * 展示数据渲染\r\n       */\n      tableDataListShow: false\n    };\n  },\n  methods: {}\n};","map":{"version":3,"names":["mounted","$axios","get","then","res","i","data","length","userList","userId","userName","userPassword","userIdentity","tableDataList","tableDataListShow","$nextTick","methods"],"sources":["src/components/manager/ManagerUser.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"padding: 5px 20px 10px 0px\">\r\n      <el-input placeholder=\"账号\" style=\"width: 200px\" suffix-icon=\"el-icon-edit\"></el-input>\r\n      <el-button type=\"primary\" icon=\"el-icon-search\" style=\"margin-left: 10px\">查询</el-button>\r\n    </div>\r\n\r\n    <el-table\r\n        :data=\"tableDataList\"\r\n        v-if=\"tableDataListShow\"\r\n        style=\"width: 100%\"\r\n    >\r\n      <el-table-column align=\"center\" label=\"ID\" width=\"100\" type=\"index\">\r\n      </el-table-column>\r\n\r\n      <el-table-column\r\n          prop=\"quartersFirst\"\r\n          label=\"用户名\"\r\n          width=\"180\"\r\n      >\r\n      </el-table-column>\r\n\r\n      <el-table-column\r\n          prop=\"quartersSecond\"\r\n          label=\"密码\"\r\n          width=\"180\"\r\n      >\r\n      </el-table-column>\r\n\r\n      <el-table-column\r\n          prop=\"quartersThird\"\r\n          label=\"身份\"\r\n      >\r\n      </el-table-column>\r\n\r\n      <el-table-column\r\n          label=\"操作\"\r\n          width=\"100\"\r\n      >\r\n\r\n        <template slot-scope=\"scope\">\r\n          <el-button @click=\"update(scope.row)\" type=\"text\" size=\"small\">修改</el-button>\r\n          <el-button @click=\"delete(scope.row)\" type=\"text\" size=\"small\">删除</el-button>\r\n        </template>\r\n\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  mounted() {\r\n    /**\r\n     * 从数据库中读取所有用户\r\n     */\r\n    this.$axios.get('http://localhost:8081/user/query_all').then(res=>{\r\n      for(let i = 0; i < res.data.length; i++) {\r\n        this.userList[i] = {\r\n          userId: res.data[i].userId,\r\n          userName: res.data[i].userName,\r\n          userPassword: res.data[i].userPassword,\r\n          userIdentity: res.data[i].userIdentity,\r\n        }\r\n\r\n        this.tableDataList[i] = {\r\n          userId: res.data[i].userId,\r\n          userName: res.data[i].userName,\r\n          userPassword: res.data[i].userPassword,\r\n          userIdentity: res.data[i].userIdentity,\r\n        }\r\n      }\r\n\r\n      /**\r\n       * 重新渲染el-upload\r\n       */\r\n      // 移除组件\r\n      this.tableDataListShow = false\r\n      // 在组件移除后，重新渲染组件\r\n      // this.$nextTick可实现在DOM 状态更新后，执行传入的方法。\r\n      this.$nextTick(() => {\r\n        this.tableDataListShow = true\r\n      })\r\n    })\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      /**\r\n       * 用户数据列表\r\n       */\r\n      userList: [{\r\n        userId: 0,\r\n        userName: '',\r\n        userPassword: '',\r\n        userIdentity: '',\r\n      }],\r\n\r\n      /**\r\n       * 展示数据集合\r\n       */\r\n      tableDataList: [{\r\n        userId: 0,\r\n        userName: '',\r\n        userPassword: '',\r\n        userIdentity: '',\r\n      }],\r\n\r\n      /**\r\n       * 展示数据渲染\r\n       */\r\n      tableDataListShow: false\r\n    }\r\n  },\r\n\r\n  methods: {\r\n\r\n  }\r\n}\r\n</script>"],"mappings":"AAmDA;EACAA,QAAA;IACA;AACA;AACA;IACA,KAAAC,MAAA,CAAAC,GAAA,yCAAAC,IAAA,CAAAC,GAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAD,GAAA,CAAAE,IAAA,CAAAC,MAAA,EAAAF,CAAA;QACA,KAAAG,QAAA,CAAAH,CAAA;UACAI,MAAA,EAAAL,GAAA,CAAAE,IAAA,CAAAD,CAAA,EAAAI,MAAA;UACAC,QAAA,EAAAN,GAAA,CAAAE,IAAA,CAAAD,CAAA,EAAAK,QAAA;UACAC,YAAA,EAAAP,GAAA,CAAAE,IAAA,CAAAD,CAAA,EAAAM,YAAA;UACAC,YAAA,EAAAR,GAAA,CAAAE,IAAA,CAAAD,CAAA,EAAAO;QACA;QAEA,KAAAC,aAAA,CAAAR,CAAA;UACAI,MAAA,EAAAL,GAAA,CAAAE,IAAA,CAAAD,CAAA,EAAAI,MAAA;UACAC,QAAA,EAAAN,GAAA,CAAAE,IAAA,CAAAD,CAAA,EAAAK,QAAA;UACAC,YAAA,EAAAP,GAAA,CAAAE,IAAA,CAAAD,CAAA,EAAAM,YAAA;UACAC,YAAA,EAAAR,GAAA,CAAAE,IAAA,CAAAD,CAAA,EAAAO;QACA;MACA;;MAEA;AACA;AACA;MACA;MACA,KAAAE,iBAAA;MACA;MACA;MACA,KAAAC,SAAA;QACA,KAAAD,iBAAA;MACA;IACA;EACA;EAEAR,KAAA;IACA;MACA;AACA;AACA;MACAE,QAAA;QACAC,MAAA;QACAC,QAAA;QACAC,YAAA;QACAC,YAAA;MACA;MAEA;AACA;AACA;MACAC,aAAA;QACAJ,MAAA;QACAC,QAAA;QACAC,YAAA;QACAC,YAAA;MACA;MAEA;AACA;AACA;MACAE,iBAAA;IACA;EACA;EAEAE,OAAA,GAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}